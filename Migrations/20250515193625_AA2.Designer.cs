// <auto-generated />
using System;
using AA2.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AA2.Migrations
{
    [DbContext(typeof(AA2DbContext))]
    [Migration("20250515193625_AA2")]
    partial class AA2
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.14")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("AA2.Models.Cita", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Confirmada")
                        .HasColumnType("bit");

                    b.Property<DateTime>("FechaCita")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdMedico")
                        .HasColumnType("int");

                    b.Property<int>("IdUsuario")
                        .HasColumnType("int");

                    b.Property<int?>("MedicoId")
                        .HasColumnType("int");

                    b.Property<string>("Motivo")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("NombreMedico")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NombrePaciente")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UsuarioId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("MedicoId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("Citas", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Confirmada = false,
                            FechaCita = new DateTime(2025, 5, 14, 20, 20, 0, 0, DateTimeKind.Unspecified),
                            IdMedico = 3,
                            IdUsuario = 4,
                            Motivo = "dolor",
                            NombreMedico = "Dr. Fernandez Santos",
                            NombrePaciente = "juan"
                        },
                        new
                        {
                            Id = 2,
                            Confirmada = false,
                            FechaCita = new DateTime(2025, 5, 16, 10, 32, 0, 0, DateTimeKind.Unspecified),
                            IdMedico = 2,
                            IdUsuario = 2,
                            Motivo = "corazon",
                            NombreMedico = "Dra. Martinez Ruiz",
                            NombrePaciente = "Pepe"
                        },
                        new
                        {
                            Id = 3,
                            Confirmada = false,
                            FechaCita = new DateTime(2025, 6, 20, 20, 1, 0, 0, DateTimeKind.Unspecified),
                            IdMedico = 6,
                            IdUsuario = 5,
                            Motivo = "garganta",
                            NombreMedico = "lili",
                            NombrePaciente = "kaka"
                        },
                        new
                        {
                            Id = 4,
                            Confirmada = false,
                            FechaCita = new DateTime(2025, 5, 20, 12, 2, 0, 0, DateTimeKind.Unspecified),
                            IdMedico = 4,
                            IdUsuario = 6,
                            Motivo = "ere",
                            NombreMedico = "pepe",
                            NombrePaciente = "ere"
                        },
                        new
                        {
                            Id = 5,
                            Confirmada = false,
                            FechaCita = new DateTime(2025, 8, 20, 10, 0, 0, 0, DateTimeKind.Unspecified),
                            IdMedico = 8,
                            IdUsuario = 7,
                            Motivo = "qq",
                            NombreMedico = "qq",
                            NombrePaciente = "qq"
                        });
                });

            modelBuilder.Entity("AA2.Models.Medico", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Disponible")
                        .HasColumnType("bit");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Especialidad")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("FechaAlta")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Telefono")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Medicos", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Disponible = true,
                            Email = "garcia@citasmedicas.com",
                            Especialidad = "Medicina General",
                            FechaAlta = new DateTime(2024, 11, 13, 15, 12, 36, 176, DateTimeKind.Local).AddTicks(7151),
                            Nombre = "Dr. Garcia Lopez",
                            Telefono = "600123456"
                        },
                        new
                        {
                            Id = 2,
                            Disponible = true,
                            Email = "martinez@citasmedicas.com",
                            Especialidad = "Cardiologia",
                            FechaAlta = new DateTime(2025, 2, 13, 15, 12, 36, 187, DateTimeKind.Local).AddTicks(2052),
                            Nombre = "Dra. Martinez Ruiz",
                            Telefono = "600789012"
                        },
                        new
                        {
                            Id = 3,
                            Disponible = true,
                            Email = "fernandez@citasmedicas.com",
                            Especialidad = "Pediatria",
                            FechaAlta = new DateTime(2025, 4, 13, 15, 12, 36, 187, DateTimeKind.Local).AddTicks(2084),
                            Nombre = "Dr. Fernandez Santos",
                            Telefono = "600345678"
                        });
                });

            modelBuilder.Entity("AA2.Models.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Contrasena")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("EstaActivo")
                        .HasColumnType("bit");

                    b.Property<DateTime>("FechaRegistro")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Rol")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Usuarios", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Contrasena = "admin123",
                            Email = "admin@gmail.com",
                            EstaActivo = true,
                            FechaRegistro = new DateTime(2025, 5, 13, 15, 12, 36, 290, DateTimeKind.Local).AddTicks(5962),
                            Nombre = "admin",
                            Rol = "Admin"
                        },
                        new
                        {
                            Id = 2,
                            Contrasena = "123456",
                            Email = "pepe@gmail.com",
                            EstaActivo = true,
                            FechaRegistro = new DateTime(2025, 5, 13, 15, 12, 36, 290, DateTimeKind.Local).AddTicks(6353),
                            Nombre = "Pepe",
                            Rol = "Paciente"
                        },
                        new
                        {
                            Id = 3,
                            Contrasena = "123456",
                            Email = "maria@gmail.com",
                            EstaActivo = true,
                            FechaRegistro = new DateTime(2025, 5, 13, 15, 12, 36, 290, DateTimeKind.Local).AddTicks(6357),
                            Nombre = "Maria",
                            Rol = "Paciente"
                        },
                        new
                        {
                            Id = 4,
                            Contrasena = "123456789",
                            Email = "juan@gmail.com",
                            EstaActivo = true,
                            FechaRegistro = new DateTime(2025, 5, 13, 15, 19, 7, 300, DateTimeKind.Local).AddTicks(8026),
                            Nombre = "juan",
                            Rol = "Paciente"
                        });
                });

            modelBuilder.Entity("AA2.Models.Cita", b =>
                {
                    b.HasOne("AA2.Models.Medico", null)
                        .WithMany("Citas")
                        .HasForeignKey("MedicoId");

                    b.HasOne("AA2.Models.Usuario", null)
                        .WithMany("Citas")
                        .HasForeignKey("UsuarioId");
                });

            modelBuilder.Entity("AA2.Models.Medico", b =>
                {
                    b.Navigation("Citas");
                });

            modelBuilder.Entity("AA2.Models.Usuario", b =>
                {
                    b.Navigation("Citas");
                });
#pragma warning restore 612, 618
        }
    }
}
